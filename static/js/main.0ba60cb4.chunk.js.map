{"version":3,"sources":["components/img/buck.jpg","components/img/cat.jpg","components/img/chameleon.jpg","components/img/dog.jpg","components/img/fox.jpg","components/img/giraffe.jpg","components/img/horse.jpg","components/img/parrot.jpg","components/img/squid.jpg","components/img/squirrel.jpg","components/img/tiger.jpg","components/img/duck.jpg","components/Card.js","components/CardData.js","components/ScoreKeeper.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","_props$card","card","src","cardName","gameLogic","react_default","a","createElement","className","onClick","bind","this","alt","CardData","score","highScore","cardObj","Buck","cardPic","cardId","Cat","Chameleon","Duck","Fox","Giraffe","Horse","Parrot","Squid","Squirrel","Tiger","Dog","_useState","useState","_useState2","Object","slicedToArray","cards","setNewCards","useEffect","newCards","toConsumableArray","i","length","randomIdx","Math","floor","random","_ref","shuffle","map","key","ScoreKeeper","setScore","_useState3","_useState4","setHighScore","_useState5","_useState6","usedCards","setUsedCards","includes","array","concat","cardHandler","prevScore","App","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ba60cb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/buck.302dcb34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat.65b5a385.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chameleon.5fe400f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dog.9728da1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fox.ace98348.jpg\";","module.exports = __webpack_public_path__ + \"static/media/giraffe.845468f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/horse.05235a0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parrot.206920f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid.3bc8299d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squirrel.a25b4d53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tiger.d1eb0bd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/duck.bc5b5876.jpg\";","import React from \"react\";\nexport default function Card(props) {\n  const {\n    card: { src, cardName },\n    gameLogic\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <button  \n      onClick={gameLogic.bind(this, cardName)}>\n        <div>\n          <img src={src} alt={cardName}/>\n          <p>{cardName}</p>\n        </div>\n      </button>\n    </div>\n    \n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Buck from './img/buck.jpg';\nimport Cat from './img/cat.jpg';\nimport Chameleon from './img/chameleon.jpg';\nimport Dog from './img/dog.jpg';\nimport Fox from './img/fox.jpg';\nimport Giraffe from './img/giraffe.jpg';\nimport Horse from './img/horse.jpg';\nimport Parrot from './img/parrot.jpg';\nimport Squid from './img/squid.jpg';\nimport Squirrel from './img/squirrel.jpg';\nimport Tiger from './img/tiger.jpg';\nimport Duck from './img/duck.jpg';\n\nexport default function CardData(props) {\n  const { gameLogic, score, highScore } = props;\n\n  const cardObj = [\n    {\n      src: Buck,\n      cardName: 'Bucky Brap',\n      cardPic: './img/buck.jpg',\n      cardId: 1\n  },\n  {\n      src: Cat,\n      cardName: 'Catie Claws',\n      cardPic: './img/cat.jpg',\n      cardId: 2\n  },\n  {\n      src: Chameleon,\n      cardName: 'Chameleonaire',\n      cardPic: './img/chameleon.jpg',\n      cardId: 3\n  },\n  {\n      src: Duck,\n      cardName: 'Ducky Drip',\n      cardPic: './img/duck.jpg',\n      cardId: 4\n  },\n  {\n      src: Fox,\n      cardName: 'Frisky Fox',\n      cardPic: './img/fox.jpg',\n      cardId: 5\n  },\n  {\n      src: Giraffe,\n      cardName: 'Greg the Giraffe',\n      cardPic: './img/giraffe.jpg',\n      cardId: 6\n  },\n  {\n      src: Horse,\n      cardName: 'Henrietta the Horse',\n      cardPic: './img/horse.jpg',\n      cardId: 7\n  },\n  {\n      src: Parrot,\n      cardName: 'Petey Parrot',\n      cardPic: './img/parrot.jpg',\n      cardId: 8\n  },\n  {\n      src: Squid,\n      cardName: 'Sandy the Squid',\n      cardPic: './img/squid.jpg',\n      cardId: 9\n  },\n  {\n      src: Squirrel,\n      cardName: 'Speedy Squirrel',\n      cardPic: './img/squirrel.jpg',\n      cardId: 10\n  },\n  {\n      src: Tiger,\n      cardName: 'Tim El Tigre',\n      cardPic: './img/tiger.jpg',\n      cardId: 11\n  },\n  {\n      src: Dog,\n      cardName: 'Woof Dogg',\n      cardPic: './img/dog.jpg',\n      cardId: 12\n  }\n  ]\n  const [cards, setNewCards] = useState(cardObj);\n\n  const shuffle = (newCards) => {\n    for (let i = newCards.length - 1; i > 0; i--) {\n      let randomIdx = Math.floor(Math.random() * i);\n      [newCards[randomIdx], newCards[i]] = [newCards[i], newCards[randomIdx]];\n    }\n  };\n\n  useEffect(() => {\n    const newCards = [...cards];\n    shuffle(newCards);\n    setNewCards(newCards);\n  },[score, highScore])\n\n  return (\n    <div className='card-container'>\n      {cards.map((card) => (\n        <Card card={card} key={card.cardName} gameLogic={gameLogic}/>\n      ))}\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport CardData from './CardData'\n\nexport default function ScoreKeeper() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0)\n  const [usedCards, setUsedCards] = useState([]);\n\n  const scoreHandler = () => {\n    setScore((prevScore) => prevScore + 1);\n  }\n  const highScoreHandler = () => {\n    setHighScore(score)\n  }\n  const cardHandler = (cardName) => {\n    setUsedCards((array) => [...array, cardName])\n  }\n  const resetGame = () => {\n    setScore(0)\n    setUsedCards([])\n  };\n  const gameLogic = (cardName) => {\n    if (!usedCards.includes(cardName)){\n      cardHandler(cardName);\n      scoreHandler();\n    } else {\n      if (score > highScore){\n        highScoreHandler();\n      }\n      resetGame();\n    }\n  }\n  return (\n    <div className='container'>\n        <header>\n          <h1>Memory Game, Animal Edition</h1>\n          <h1>Score: {score}</h1>\n          <h2>High Score: {highScore}</h2>\n        </header>\n        <div className='intimate-card-container'>\n          <CardData\n          gameLogic={gameLogic}\n          score={score}\n          highScore={highScore}\n          />\n      </div>\n    </div>\n  )\n}\n","import './style.css';\nimport React from 'react'\nimport ScoreKeeper from './ScoreKeeper'\nlet App = () => {\n  return (\n    <div className=\"App\">\n    <ScoreKeeper />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/style.css';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}